# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
- job: "single_node_hana"
  variables:
  - group: test_sap_hana_deployment
  pool:
    vmImage: "ubuntu-16.04"
  displayName: "Test deployment of single node hana"
  steps:
  - checkout: self  # self represents the repo where the initial Pipelines YAML file was found
    clean: "all"  # whether to fetch clean each time
    path: "persia"  # path to check out source code, relative to the agent's build directory (e.g. \_work\1)
    persistCredentials: boolean  # set to 'true' to leave the OAuth token in the Git config after the initial fetch
  - script: |
      ls
      cp deploy/vm/test/terraform.tfvars deploy/vm/modules/single_node_hana
      cd deploy/vm/modules/single_node_hana
      terraform init
      terraform plan
    displayName: 'Test single node hana'
    env:
      TF_VAR_azure_service_principal_id: $(hanarp-int-landscape-spn-id)
      TF_VAR_azure_service_principal_pw: $(hanarp-int-landscape-spn-pw)
      TF_VAR_url_sap_sapcar_linux: $(hanarp-int-sapcar-721-linux)
      TF_VAR_url_sap_hdbserver: $(hanarp-int-hana2sps03-server)
      TF_VAR_url_hana_studio_linux: $(hanarp-int-hanastudio-linux)
      TF_VAR_pw_db_system: $(hana-int-pw-db-system)
      TF_VAR_pw_os_sidadm: $(hana-int-pw-sid-adm)
      TF_VAR_pw_os_sapadm: $(hana-int-pw-sap-adm)
      TF_VAR_pw_hacluster: $(hana-int-pw-sap-adm)
      AZURE_CLIENT_ID: $(hanarp-int-landscape-spn-id)
      AZURE_SECRET: $(hanarp-int-landscape-spn-pw)
      AZURE_TENANT: $(landscape-tenant)
      AZURE_SUBSCRIPTION_ID: $(landscape-subscription)
      ARM_CLIENT_ID: $(hanarp-int-landscape-spn-id)
      ARM_CLIENT_SECRET: $(hanarp-int-landscape-spn-pw)
      ARM_TENANT_ID: $(landscape-tenant)
      ARM_SUBSCRIPTION_ID: $(landscape-subscription)